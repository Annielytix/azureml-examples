{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "defaultValue": "anewworkspacetest",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning workspace."
            }
        },
        "keyVaultName": {
            "defaultValue": "[concat('kva', uniqueString(resourceGroup().id, parameters('workspaceName')))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure keyvault to create."
            }
        },
        "storageAccountName": {
            "defaultValue": "[concat('storagea', uniqueString(resourceGroup().id, parameters('workspaceName')))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure storage account to create."
            }
        },
        "applicationInsightsName": {
            "defaultValue": "[concat('aia', uniqueString(resourceGroup().id, parameters('workspaceName')))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure app insights account to create."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Specifies the SKU size for interactive and remote compute."
            }
        },
        "computeName": {
            "defaultValue": "cpucluster",
            "type": "String",
            "metadata": {
                "description": "The compute you want this job to run on"
            }
        },
        "computeVmSize": {
            "defaultValue": "Standard_D3_V2",
            "type": "String",
            "metadata": {
                "description": "Specifies the SKU size for interactive and remote compute."
            }
        },
        "computeMinNodeCount": {
            "defaultValue": 0,
            "type": "Int",
            "metadata": {
                "description": "The minimum number of nodes to use on the cluster. If not specified, defaults to 0"
            }
        },
        "computeMaxNodeCount": {
            "defaultValue": 4,
            "type": "Int",
            "metadata": {
                "description": " The maximum number of nodes to use on the cluster. If not specified, defaults to 4."
            }
        },
        "trainingScriptForUpload": {
            "defaultValue": "https://raw.githubusercontent.com/mrudulan/DevPlatv2Template/master/code/lightgbm/iris/train.py",
            "type": "String",
            "metadata": {
                "description": "Link to training script."
            }
        },
        "dataForUpload": {
            "defaultValue": "https://raw.githubusercontent.com/mrudulan/DevPlatv2Template/master/data/raw/iris.csv",
            "type": "String",
            "metadata": {
                "description": "Link to data file."
            }
        },
        "targetTrainingBlobContainer": {
            "defaultValue": "localuploads",
            "type": "String",
            "metadata": {
                "description": "The blob container that will hold the training script."
            }
        },
        "targetTrainingBlobPathInContainer": {
            "defaultValue": "test",
            "type": "String"
        },
        "datastoreName": {
            "defaultValue": "test",
            "type": "String"
        },
        "codeAssetName": {
            "defaultValue": "myCodeAsset",
            "type": "String",
            "metadata": {
                "description": "Name of code asset."
            }
        },
        "codeAssetVersion": {
            "defaultValue": "1",
            "type": "String"
        },
        "dataAssetName": {
            "defaultValue": "myDataAsset",
            "type": "String",
            "metadata": {
                "description": "Name of data asset."
            }
        },
        "dataAssetVersion": {
            "defaultValue": "1",
            "type": "String"
        },
        "targetDataFolder": {
            "defaultValue": "data",
            "type": "String",
            "metadata": {
                "description": "The folder your dataset contents will be downloaded to for training."
            }
        },
        "jobDataMode": {
            "defaultValue": "download",
            "type": "String",
            "metadata": {
                "description": "Options: mount, download."
            }
        },
        "jobName": {
            "defaultValue": "command1",
            "type": "String",
            "metadata": {
                "description": "Name of job."
            }
        },
        "jobCuratedEnvironmentName": {
            "defaultValue": "AzureML-Tutorial",
            "type": "String"
        },
        "jobCommand": {
            "defaultValue": "python train.py",
            "type": "String",
            "metadata": {
                "description": "Start up command in code job."
            }
        },
        "jobTags": {
            "defaultValue": {},
            "type": "Object",
            "metadata": {
                "description": "Optional : Provide JSON object with 'key,value' pairs to add as tags on dataset. Example- {\"sampleTag1\": \"tagValue1\", \"sampleTag2\": \"tagValue2\"}"
            }
        },
        "utcValue": {
            "defaultValue": "[utcNow()]",
            "type": "String"
        }
    },
    "variables": {
        "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "appInsightsResourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
        "workspaceResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]",
        "datastoreResourceID": "[resourceId('Microsoft.MachineLearningServices/workspaces/datastores', parameters('workspaceName'), parameters('datastoreName'))]",
        "environmentResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces/environments', parameters('workspaceName'), parameters('jobCuratedEnvironmentName'))]",
        "computeResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('workspaceName'), parameters('computeName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'centraluseuap')),'southcentralus',parameters('location'))]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('applicationInsightsName')]",
                "[parameters('keyVaultName')]",
                "[parameters('storageAccountName')]"
            ],
            "sku": {
                "tier": "enterprise",
                "name": "enterprise"
            },
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "storageAccount": "[variables('storageAccountResourceId')]",
                "keyVault": "[variables('keyVaultResourceId')]",
                "applicationInsights": "[variables('appInsightsResourceId')]"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/computes",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('workspaceName'), '/', parameters('computeName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('workspaceName')]"
            ],
            "properties": {
                "computeType": "AmlCompute",
                "properties": {
                    "vmSize": "[parameters('computeVmSize')]",
                    "scaleSettings": {
                        "minNodeCount": "[parameters('computeMinNodeCount')]",
                        "maxNodeCount": "[parameters('computeMaxNodeCount')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccountName'), '/', 'default', '/', parameters('targetTrainingBlobContainer'))]",
            "dependsOn": [
                "[parameters('storageAccountName')]"
            ]
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/jobs",
            "apiVersion": "2021-03-01-preview",
            "name": "[concat(parameters('workspaceName'), '/', parameters('jobName'))]",
            "dependsOn": [
                "[parameters('workspaceName')]",
                "[variables('computeResourceId')]"
            ],
            "properties": {
                "jobType": "Command",
                "command":"[concat('wget ', parameters('trainingScriptForUpload'), ' && ', parameters('jobCommand'))]",
                "environmentId": "[variables('environmentResourceId')]",
                "compute": { "target": "[variables('computeResourceId')]", "instanceCount": 1 }
                }
        }
    ],
    "outputs": {
        "result": {
            "type": "string",
            "value": "[concat('https://ml.azure.com/runs/',parameters('jobName'),'?wsid=',variables('workspaceResourceId'))]"
        }
    }
}
